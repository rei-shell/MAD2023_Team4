<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Base application theme. -->
    <style name="Base.Theme.MAD_Assg" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your light theme attributes here -->
    </style>

    <!-- Light Mode Theme -->
    <style name="AppTheme.Light" parent="Base.Theme.MAD_Assg">
        <!-- Customize other attributes for light mode as needed -->
        <item name="colorPrimary">@color/my_light_primary</item>
        <item name="colorPrimaryDark">@color/my_light_primary_dark</item>
    </style>

    <style name="ScreenBackground"><item name="android:background">@drawable/gradient</item></style>
    <style name="CardBackground"><item name="android:background">@color/grey</item></style>
    <style name="TextHeaderColor"><item name="android:background">@color/grey</item></style>
    <style name="TextHeader"><item name="android:textColor">@color/black</item></style>
    <style name="BottomNavigationStyle" parent="Widget.Design.BottomNavigationView">
        <!-- Set the background for the BottomNavigationView using a gradient -->
        <item name="android:background">@color/grey</item>
        <!-- Set the color for the menu icons -->
        <item name="itemIconTint">@color/black</item>
        <!-- Set the color for the menu text -->
        <item name="itemTextColor">@color/black</item>

        <!-- Set other attributes for the BottomNavigationView if needed -->
    </style>


    <!-- Define a base style with common attributes -->
    <style name="BaseStyle">
        <!-- Add common attributes here -->
        <!-- Add other common attributes if needed -->
    </style>

    <!-- Define styles that inherit from the base style and add/override specific attributes -->
    <style name="BoxStrokeColor" parent="BaseStyle">
        <!-- Add specific attributes for BoxStrokeColor style -->
        <item name="boxStrokeColor">@color/black</item>
        <!-- Add other attributes specific to BoxStrokeColor style -->
    </style>

    <style name="TextColor" parent="BaseStyle">
        <!-- Add specific attributes for TextColor style -->
        <item name="android:textColor">@color/black</item>
        <!-- Add other attributes specific to TextColor style -->
    </style>

    <style name="TextColorHint" parent="BaseStyle">
        <!-- Add specific attributes for TextColorHint style -->
        <item name="android:textColorHint">@color/black</item>
        <!-- Add other attributes specific to TextColorHint style -->
    </style>

    <style name="EndColor" parent="BaseStyle"><item name="endIconTint">@color/black</item></style>
    <style name="TIntColor"><item name="android:tint">@color/black</item></style>

    <!-- styles.xml -->
    <style name="YourButtonStyle" parent="Widget.AppCompat.Button">
        <item name="android:background">@color/white</item>
        <item name="android:textColor">@android:color/black</item> <!-- Example: Set text color to white -->
        <!-- Add other style properties as needed -->
    </style>

    <style name="AppTheme.SearchViewStyle" parent="Widget.AppCompat.SearchView">
        <!-- Customize attributes for the SearchView -->
        <item name="android:queryBackground">@color/black</item> <!-- Replace "your_desired_color" with the color you want -->
        <item name="android:queryHint">Search Here</item> <!-- Replace with your desired query hint text -->
        <item name="android:iconifiedByDefault">false</item> <!-- Replace with your desired default iconified state -->
        <!-- Add other attributes specific to your SearchView style -->
    </style>

    <style name="AlertDialogButtonStyle.Yes" parent="Widget.AppCompat.Button.Colored">
        <!-- Customize the button text color for "Yes" -->
        <item name="android:textColor">@color/black</item>
    </style>

    <style name="AlertDialogButtonStyle.No" parent="Widget.AppCompat.Button.Colored">
        <!-- Customize the button text color for "No" -->
        <item name="android:textColor">@color/black</item>
    </style>


</resources>
